"""
    5.8 - Шаблоны сооответствий (стр. 96 МакГрата)

    Подробная справка о регулярных выражениях: docs.python.org/3/library/re.html

    pattern matching - сопоставление с образцом

    В Python сущесвтуе мощное средство для поиска и замены текста при помощи шаблонов - так называемые регулярные
выражения. Для их использования необходимо импортировать модуль re.

    Шаблон регулярных выражений может состоять целиком из символьных литералов, описывающих строку символов,
соответсвтующих какому-лтбо тексту. Например, регулярное выражение wind найдет соответствие в строке windows. В общем
случае шаблон регулярного выражения состоит из набора символьных литералов, а также следующих метасимволов.

Метасимвол  Соответствие                    Пример
    .       Любой символ                    py..on
    ^       Начало строки                   ^py
    $       Конец строки                    ..on$
    *       Повторение фрагмента            py*
            ноль или более раз
    +       Повторение фрагмената           py+
            один или более раз
    ?       Фрагмент либо присутствует      py?
            либо отсутствует
    {}      Множественное повторение        a{3}
    []      Класс сиволов                   [a-z]
    \       Специальная последовательность  \s
    |       Фрагмент слева или справа       a | b
    ()      Группировка выражений           (...)

!!! Диапазон символов [a-z] соответствует только строчным латинским буквам, а диапазон [a-z0-9] включает еще и цифры.

    Комбинация литералов и метасимволов, образующая регулярные выражения, при помощи метода re.compile() компилируются
в объект шаблона. У этого объекта существуют методы для различных операций, например при помощи метода match() можно
проверять соответствие шаблону строки, переданной методу в качесвте аргумента.
    Метод match() возвращает значение None, если совпадений с шаблонами не найдено, а в случае успешного поиска возвра-
щается объект, содержащий информацию о соответствии строки щаблону.
    Полученный в результате объект содержит методы start() и end(), возвращающие соотвтетственно позиции начала и конца
совпадения, а так-же метод group(), который вернет всю строку соответствия.
"""

# Задачи:
# 1. Импортировать модуль re.

from re import *

# 2. Проинициализировать переменную объектом, содержащим регулярное выражение:

pattern = compile('(^|\s)[-a-z0-9_.]+@([-a-z0-9_.]+\.)+[a-z]{2,6}(\s|$)')

# 3. Определить функцию, в которой запрашивается ввод строки пользователем и осуществляется проверка этой строки на
#    соответствие шаблону.

def get_address() :
    address = input('Enter your e-mail address: ')
    is_valid = pattern.match(address)

# 4. Добавить инструкцию для ввода соответствующего сообщения, описывающего результат проверки (не забыть про отступы).
    if is_valid :
        print('Valid address: ', is_valid.group())
    else :
        print('Invalid address! Please retry...\n')
get_address()