"""
    Функция определяется с помощью ключевого слова def и содержит блок инструкций,
выделенных отступом, которые иполняются при вызове данной функции.

    К переменным с глобальной областью видимости можно обращаться из любого места
программы, в то время как к локальным переменным - только внутри тех функций, где
они объявлены.

    При определении функции ее аргументы объявляются в виде списка, разделенного
запятой, находящегося внутри скобок.

    При вызове функиций ей должны передаваться параметры для каждого ее аргумента,
кроме случаев, когда, в качестве аргументов используются значения по умолчанию,
описанные при объявлении функции.

    Функция может включать в себя инструкцию return, которая возвращает значение
оператору, вызвавшему функцию.

    С помощью ключевого слова lambda можно создавать анонимные функции, содержащие
одно выражение и возвращающие объект функции.

    Очень часто используется функции обратного вызова, представляющие собой
lambda - выражения, встроенные непосредственно в список аргументов в вызывающем
функцию операторе.

    С помощью ключевого слова pass можно добавлять заполнители (заглушки) в места
программы, куда впоследствии планируется поставить какую-либо инструкцию.

    Если в блоке функции появляется инструкция, использующая ключевое слово yield,
создается генераторная функция.

    Генераторная функция сохраняет свое состояние с момента последнего вызова,
а также возвращает объект-генератор вызвавшему ее оператору.

    Для продожения исполенния генераторной функции с того места, где она была
заморожена, используется встроенная функция next().

    Ошибки или исключительные ситуации, которые появляются в процессе запуска
программы, могут быть обработаны с помощью заключения инструкций в блоки try-except.

    Можно использовать необязательную инструкцию finally для определения инструкций,
которые будут исполняться после обработки исключений.

    С помощью ключевого слова assert можно добавлять в программу отладочный код,
который станет сообщать об ошибках разработки.

"""