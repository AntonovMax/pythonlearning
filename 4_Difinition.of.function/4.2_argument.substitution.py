""""
    Подстановка аргументов

При определении пользовательской функции можно указать необязательный параметр
(так называемый аргумент). После этого аргументу можно передавать значения,
Указав его в скобках при вызове функции, и тогда она станет использовать переданное
ей значение, ссылаясь на имя аргумента. Например, определение функции, принимающей
аргумент для вывода на печать, выглядит следущим образом:

    def echo(user) :
    print('User:', user)

    Теперь в вызове этой функции нужно указать значение, которое передается аргументу
в скобках для того, чтобы вывести его на печать:

    echo('Mike')

в функцию можно передавать как один, как и несколько аргументов (параметров), при
этом значения в скобках разделяются запятой:

    def echo(user, lang, sys)
    print('User:', user, 'Language:', lang, 'Platform:', sys)

при вызове такой функции нужно включать то же самое количество передаваемых значений.   

    echo('Mike', 'Python', 'Windows')

значения нужно передавать в том же порядке, если только вызов не происходит след. образом:

    echo(lang = 'Python', user = 'Mike', sys = 'Windows')

существует возможность при определении функции уазать заранее значение аргументов по умолчанию,
оно стнет ипользоваться, если в вызове  функции аргументу не передано соответствующее значение,
а в случае передачи будет перезаписано тем значением, которое указано в вызове:

    def echo(user, lang, sys = 'Linux') :
    print('User:', user, 'Language:', lang, 'Platform:', sys)
    
это означает, что можно вызывать функцию, передав ей меньше значений, чем задано при определении,
и при этом будет использоваться значение аргументов, заданное по умолчанию, или же можно передавать
столько же значений, сколько указано аргументов, и при этом перезаписывать значения тех, которые
заданы по умолчанию.

"""""


# Задания:
# 1. Определить функцию, принимающую 3 аргумента и вывести на печать их значения.

def echo(user, lang, sys):
    print('User:\t\t', user, '\nLanguage:\t', lang, '\nPlatform:\t', sys, '\n')


# 2. Вызавать функцию, передав строковые значения ее аргументам в порядке определения.


echo('Mike', 'Python', 'Windows')

# 3. Вызвать функцию, передав ей строковые значения путем указания имен агрументов.

echo(lang='Python', sys='MacOS', user='Anna')


# 4. Объявить функцию, принимающую 2 аргумента со значениями, заданными по умолчанию
# которая будет выводить свои аргументы.

def mirror(user='Carole', lang='Python'):
    print('User:\t\t', user, '\nLanguage:\t', lang, '\n')


mirror()

# 5. Перепивать аргументы из заданяи 2.

mirror(lang='Java')
# mirror(user = 'Tony')

mirror('Susan', 'C++')
