#   Цикл while
#   Цикл создается с помощью ключевого слова while, после него следует проверочное
# выражение, затем символ двоеточия. Ниже должны идти инструкции, выполняемые при
# успешной проверке выражения. Каждая строка обязательно должна иметь один и тот же
# отступ от строки с ключевым словом while. Этот блок должен содержать инструкцию,
# изменяющую значение проверочного выражения на противоположное, иначе цикл будет
# бесконечным.
#   Циклы могут быть вложенными один в другой, при этом на каждой итерации наружного
# цикла уже выполнены все внутреннего цикла. Для удобства можно проинициализировать
# перед каждым определением цикла так называемую переменную-"счетчтк", задав ей
# певоначальное значение и увеличивая его на каждой итерации, а так же включив данную
# переменную и проверочное выражение. Цикл будет завершаться при неудачной проверке
# выражения.

# Задания:
# 1. Описать переменную-счетчик и определить наружный цикл, используя эту переменную
# в проверочном выражении.

#i = 1
#while i < 4 :

# 2. Добавить инструкцию с отступами для вывода значения счетчика и приращения его
# значения на каждой итерации цикла.

#    print('Outer loop iteration', i)
#    i += 1

# 3. Теперь, по прежнему с отступами, проинициализировать вторую переменную-счетчик и
# определить внутренний цикл, используя эту переменную в проверочном выражении

#    j = 1
#    while j < 4 :

# 4. Добавить инструкцию для вывода значения счетчика, а так же, для приращения его
# величины на каждой итерации.

#        print('\tInner loop iteration:', j)
#        j += 1

# Сравление while и for in
# while
i = 1
while i < 4 :
    print('Outer loop iteration', i)
    i += 1

    j = 1
    while j < 4:
        print('\tInner loop iteration:', j)
        j += 1

# for in
for i in range(1, 4) :
    for j in range(1, 4):
        print('Running i =', i, 'j =', j)