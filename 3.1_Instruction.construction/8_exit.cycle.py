#   Выход из цикла.
#   break - ключевое слово используется для принудительного выхода из цикла, когда
# выполняется какое-то улсловие. Располагается внутри инструкции цикла после проверяемого
# выражения. При получении True, цикл заканчивается, программа передает управление
# следующей инструкции. Прим.: если break стоит во вложенном цикле, управление передасться
# наружному циклу.
#   continue - позволяет пропустить одну из итераций цикла, если выполняется условие.
# Continue располагается внутри блока инструкицй цикла и предваряется проверочным выражением.
# Когда возвращается True, данная итерация заканчивается и программа переходит к следующей.

# Задание:
# 1. Описать инструкцию, создающую цикл, выполняющийся 3 раза.

for i in range(1, 4) :

# 2. Добавить инструкцию, создающую вложенный цикл.

    for j in range(1, 4) :

        if i == 1 and j == 1 :
            print('Continues inner loop at i=1, j=1') # Продолжает внутренний цикл при i = 1, j = 1
            continue

        if i == 2 and j == 1: # Выполнение задания 4 обязательное соблюдение отступов
            print('Breaks inner loop at i=2, j=1:') # Разрывает внутренний цикл при i = 2, j = 1
            break

# 3. Добавить вывод значений счетчиков (как внутреннего цикла, так и наружного)
# для каждого прохода внутри цикла.

        print('Running i =', i, 'j =', j)

# 4. Добавить инструкцию break в самое начало блока инструкций  внытреннего цикла,
# чтобы организовать выход из него.
# if i == 2 and j == 1:
#     print('Breaks inner loop at i=2, j=1:')
# break

# 5. Добавить ключевое слово 'continue' в самое начало блока внутреннего цикла, для
# пропуска первой итерации внутреннего цикла.
# if i == 1 and j == 1 :
#    print('Continues inner loop at i=1, j=1')
#    continue