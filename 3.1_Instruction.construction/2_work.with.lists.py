#Работа со списками через методы, к которым можно обратиться через точечную запись
# Метод списка          Описание
# list.append(x)        Добавляет элемент х в конец списка
# list.extend(L)        Добавляет все элементы стиска L в конец списка
# list.insert(i, x)     Вставляет элемент х в позицию перед индексом i в списке
# list.remove(x)        Удаляет первый элемент х из списка
# list.pop(i)           Удаляет элемент с индексом i и возвращает его
# list.pop() удалит последний элемент в списке
# list.index(x)         Возвращает индекс первого элемента х в списке
# list.count(x)         Возвращает количество вхождений элемента х в список
# list.sort()           Сортирует элементы списка по возрастанию
# list.reverse()        Обращает порядок следования элементов
# Функция len(L) возвращает размер списка
# del(i) - удаляет одиночный элемент, указав номер его позиции i.
#для указаняи диапазона элементов для удаления используется i1:i2.
# В Pyton существует функция int(s) возвращающая числовое представление строковой величины s.

basket = ['Apple', 'Bun', 'Cola']
crate = ['Egg', 'Fig', 'Grape']

# damson - чернослив
# fig - инжир
# bun - булочка
# basket - корзина
# crate - деревянный ящик, упаковочная клеть
# Вывод певого списка и его длины
print('Basket list', basket)
print('Basket elements', len(basket))

# Инструкция:
# 1. Добавить элемент в список
# 2. Отобразить все элементы
# 3. Удалить последний элемент
# 4. Отобразить все элементы
basket.append('Damson')
print('Appended:', basket)
print('Last item removed:', basket.pop())
print('Basket list', basket)

# Инструкция:
# 1. Расширить первый список элементами второго
# 2. Вывести все элементы первого списка
# 3. Удалить элементы
# 4. Вывести список еще раз
basket.extend(crate)
print('Extended:', basket)
del basket[1]
print('Item removed:', basket)
del basket[1:3]
print('Slice removed:', basket) # Последний индексный номер
# указывает на каком элементе остановиться, но сам элемент не удаляется

