# Неизменяемые списки (кортеж, множество и etc)
# tuple - кортеж
# Кортеж - неизменяемый список. Создается путем присваивания значений, разделенных запятыми и стоящих в скобках
# Такой процесс назван упаковкой кортежа.
# colors-tuple = ('Red','Green', 'Red', 'Blue', 'Red')
# a, b, c, d, e = colors-tuple
# Значения, находящиеся внутри кортежа могут быть присвоены отдельным переменным (распаковка последовательности).
# Множество (set) - неизменяемы список уникальных (неповторяющихся) элементов.
# Обозначается фигурными скобками {}.
# phonetic-set = {'Alpha', 'Dravo', 'Charlie'}
# к множеству нельзя обращаться методами, свойственными списку и кортежу.
# Методы для работы с множеством:
# Метод множества   Описание
# set.add(x)        Добавляет элеменит х в множество
# set.update(x,y,z) Добавляет несколько элементов в множетсво
# set.copy()        Возвращает копию множества
# set.pop()         Удаляет случайным образом один элемент
# set.discard(i)    Удаляет элемент с порядковым номером i
# set1.intersection(set2)   Возвращает элементы, принадлежащие обоим множествам
# set1.difference(set2)     Возвращает элементы из множества set1, которых нет в set2
#   Множество может быть создано конструктором set(<список>),
# а неизменяемое множество, конструктором frozenset().
#
# intersection   - пересечение
# difference     - разница
#
# Чтобы определить принадлежность той или иной структуры данных к классу списков, применяется функция type(),
# а для поиска значения в списке, использыется встроенный оператор вхождения in.

# Задания:
# 1. Опишем кортеж и выведем его содержимое, длину и тип.
# Moose - лось
zoo = ('Kangaroo', 'Leopard', 'Moose')
print('Tuple:', zoo, '\tLenght:', len(zoo), '\tType:', type(zoo))

# 2. Описать множество, добавить в него еще элемент, вывести содержимое, длину и тип.
bag = {'Red', 'Green', 'Blue'}
bag.add('Grey')
print('\nSet:', bag, '\tLenght:', len(bag), '\tType:', type(bag))

# 3. Добавдение инструкции для поиска двух значений в мпожестве
print('\nIs Green is bag set?:\t', 'Green' in bag)
print('Is Orange is bag set?:\t', 'Orange' in bag)

# 4. Описать второе множество, вывести его содержимое, длину, затем общие элементы для обоих множеств.
box = {'Red', 'Purple', 'Yellow'}
print('\nSet:', box, '\tLenght:', len(box))
print('Common to both:\t\t', bag.intersection(box))
print('Общий для обоих:\t', bag.intersection(box))
