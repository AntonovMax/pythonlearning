#   Обход элементов в цикле
#   Для перебора элементов любого указанного списка используют оператор 'for in'
# После in указывается имя списка. Инструкция должна заканчиваться символом двоеточия
# далее идут инструкции, которые выполняются на каждой итерации цикла.
#       for элемент in имя-списка :
#       выполняемые-инсрукции-на-каждой-итерации
#       выполняемые-инсрукции-на-каждой-итерации
#   С помощью for in можно обходить внутри цикла элементы списка, кортежа, множества,
# ключи словаря.
#   С помощью for in можно обходить элементы любого списка или символы в том порядке,
# в котором они появляются, но нельзя указать явно количество итераций цикла, условие
# остановки, либо размер шага итераций.
#   Однако можно воспользоваться range(), чтобы сгенерировать последовательность чисел,
# используемых для итерации. Прим. range(5) сген. паоследовательность 0, 1, 2, 3, 4.
# range(1,5) сгенерирует 1, 2, 3, 4 (диапазон)
# range(1,14,4) сгенерирует 1, 5, 9, 13 (диапазон с шагом)
#   В цикле for нельзя использовать размер шага и указывать конечный элемент в Python.
#   enumerate() - указав имя списка можно получить все индексы и связанные с ними значения.
#   zip() - обход нескольких списков одновременно. Указывая через запятую имена списков в
# качетве параметра, на выходе получим попарно значение элемента с одним и тем же индексом
# через запятую.
#   items() - gри обходе словаря можно вывести пары ключ:значение, указав после for два
# параметра (для имени ключа, для его значения).
#   При программировании на Phyton любая структура, содержащая множественные элементы, которые
# можно обойти в цикле, считатется итерируемой.

# Задания:
# 1. Описать список, кортеж и словарь.

chars = ['A', 'B', 'C']
fruit = ('Apple', 'Banana', 'Cherry')
dict = {'name':'Mike', 'ref':'Python', 'sys':'Win'}

# 2. Добавить инструкции для вывода значений всех элементов списка.

print('Elements:\t', end = ' ')
for item in chars :
    print(item, end = ' ')
# end = '' - убирает перенос и ставит значения в одну строку.

# 3. Вывести значения всех элементов списка, а так же их индексов.

print('\nEnumerated:\t', end = ' ')
for item in enumerate(chars) :
    print(item, end = ' ')

# 4. Добавить инструкцию для вывода всех элементов списка и кортежа.

print('\nZipped:\t', end = ' ')
for item in zip(chars, fruit) :
    print(item, end = ' ')

# 5. Добавить инструкции для вывода всех имен ключей словаря и связанных элементов.

print('\nParied:')
for key, value in dict.items() :
    print(key, '=', value)