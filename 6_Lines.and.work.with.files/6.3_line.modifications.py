"""
    Модификация строк. стр. 104 МакГрат.

    Объект str имеет множество полежных методов для проверки содержимого строк, а так же их модификации.
К таким методам можно обращаться, используя точечную запись. Наиболее распространенные методы модификации
строк и их краткое описание представлены в таблице ниже.

Метод               Описание
capitalize()        переводит первый символ строки в верхний регистр, а все остальные в нижний;
title()             переводит вервую букву каждого слова в верхний регистр, а все остальные в нижний;
upper()             преобразование строки к верхнему регистру;
lower()             преобразованеи строки к нижнему регистру;
swpcase()           смена регистра на противоположный;
join(seq)           сборка строки из списка seq с добавлением разделителя;
lstrip()            удаление пробелов в начале строки;
rstrip()            удаление пробелов в конце строки;
strip()             удаление пробелов в начале и конце строки;
replace(old, new)   замена всех подстрок old на подстроку new;
ljust(w, c)         подгоняет строку под ширину в w символов, добавляя слева сивол c;
rjust(w, c)         подгоняет строку под ширину в w символов, добавляя справа сивол c;
center(w, c)        центрирует строку, подгоняя под ширину в w символов, добавляя справа и слева символы с
                    (по умолчанию добавляется пробел);
count(sub)          возвращает кол-во вхождейни подстроки sub;
find(sub)           возвращает номер первого вхождения подстроки sub или -1, если подстрока не найдена;
startswith(sub)     возвращает True, если подстрока sub найдена вначале строки, и False в противном случае;
endswith(sub)       возвращает True, если подстрока sub найдена в конце строки, и False в противном случае;
isalpha()           возвращает True, если все символы строки являются только буквами, и False в противном случае;
isnumeric()         возвращает True, если все символы строки являются только цифрами, и False в противном случае;
isalnum()           возвращает True, если все символы строки являются только буквами или цифрами, и False в
                    противном случае;
islower()           возвращает True, если все символы строки в нижнем регистре и False в противном случае;
isupper()           возвращает True, если все символы строки в верхнем регистре и False в противном случае;
istitle()           возвращает True, если все первые буквы слов в верхнем регистре и False в противном случае;
isspace()           возвращает True, если строка пустая (т.е. в ней содержатся пробелы, символы табуляции, символы
                    новой строки), в противном случае возвращается False.
isdigit()           возвращает True, если строка содержит только цифры, в противном случае возвращается False;
isdecimal()         возвращает True, если строка содержит только десятичные числа, в противном случае возвращается
                    False;

!!! При использовании метода rjust() выровненная по правому краю строка заполняется символвами слева, а при исполь-
    зовании ljust() - выровненная по левому краю строка заполняется символами справа.
"""

# Задачи
# 1. Проинициализировать новую переменную, содержащую символы в нижнем регистре и пробелы

string = 'python in easy steps'

# 2. Вывести результаты работы функций capitalized, titked, centered

print('\nCapitalized:\t', string.capitalize())
print('Titled:\t\t\t', string.title())
print('Centered:\t\t', string.center(30, '*'))

# 3. Вывести строки в верхнем регистре, а так же объединенными с символами **.

print('Uppercase:\t\t', string.upper())
print('Joined:\t\t\t', string.join('**'))

# 4. Вывести новую строку, которая дополнена символами * слева.

print('Justified:\t\t', string.rjust(30, '*'))

# 5. Вывести строку, в которой все сиволы s заменены на *.

print('Replaced:\t\t', string.replace('s', '*'))