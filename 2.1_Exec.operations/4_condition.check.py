#Роль тенарного оператора в Phyton выполеняют операторы if, else
#Если-итина-возвращаем-это if (проверочное выражение) else если-ложь-возвращаем-это
#Пример (условие ветвления при значении переменной неравной 1)
#если-истина-выполняем-это if (var != 1) else если-ложь-выполением-это
#   c = a if (a < b) else b
#   > True, если  a < b, присваиваем c
#
#Проверка на четность числа:
#если-истина(нечетное)-выполняем-это if (var % 2 != 0) else если-ложь(четное)-выполняем-это

a = 1
b = 2

print('\nVar a =', a, '\tVar b =', b)
print('\nVariable a Is :', 'One' if (a == 1) else 'Not One')
print('Variable a Is :', 'Even' if (a % 2 == 0) else 'Odd') #Even - четное, Odd - нечетное
#применение деления по модулю:
#для определения четности числа (если остаток от деления на 2 = 0, то число четное)
#для определения кратности числа (какие числа из диапазона от 0 до 100 кратны 7)
print('\nVariables b Is :', 'One' if (b == 1) else 'Not One')
print('Variables b Is :', 'Even' if (b % 2 == 0) else 'Odd')
max = a if (a > b) else b
print('\nGreater Value Is:', max)

